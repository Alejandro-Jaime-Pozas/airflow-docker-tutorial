{"timestamp":"2025-10-22T00:00:00.608249Z","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager","filename":"manager.py","lineno":179}
{"timestamp":"2025-10-22T00:00:00.609078Z","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/dag_with_postgres_operator.py","logger":"airflow.models.dagbag.DagBag","filename":"dagbag.py","lineno":593}
{"timestamp":"2025-10-22T00:00:00.652851Z","level":"info","event":"Executing: \n            CREATE TABLE IF NOT EXISTS dag_runs (\n                dt TIMESTAMP,\n                dag_id VARCHAR(250),\n                PRIMARY KEY (dt, dag_id)\n            );\n        ","logger":"airflow.task.operators.airflow.providers.common.sql.operators.sql.SQLExecuteQueryOperator","filename":"sql.py","lineno":309}
{"timestamp":"2025-10-22T00:00:00.686461Z","level":"info","event":"Running statement: \n            CREATE TABLE IF NOT EXISTS dag_runs (\n                dt TIMESTAMP,\n                dag_id VARCHAR(250),\n                PRIMARY KEY (dt, dag_id)\n            );\n        , parameters: None","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook","filename":"sql.py","lineno":810}
